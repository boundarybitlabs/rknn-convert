# This file is autogenerated by maturin v1.9.2
# To update, run
#
#   maturin generate-ci github --platform manylinux musllinux -o .github/workflows/CI.yml
#
name: CI

on:
    push:
        branches:
            - main
        tags:
            - "*"
    pull_request:
    workflow_dispatch:

permissions:
    contents: read

jobs:
    # The original `linux` job to build wheels for x86_64 and aarch64
    linux:
        runs-on: ${{ matrix.platform.runner }}
        strategy:
            matrix:
                platform:
                    - runner: ubuntu-22.04
                      target: x86_64
                    - runner: ubuntu-22.04
                      target: aarch64
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - name: Build wheels
              uses: PyO3/maturin-action@v1
              with:
                  target: ${{ matrix.platform.target }}
                  args: --release --out dist --find-interpreter --strip
                  sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
                  manylinux: auto
            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  # Use a consistent name to make downloading easier later
                  name: wheels-linux-${{ matrix.platform.target }}
                  path: dist

    # The original `musllinux` job to build wheels
    musllinux:
        runs-on: ${{ matrix.platform.runner }}
        strategy:
            matrix:
                platform:
                    - runner: ubuntu-22.04
                      target: x86_64
                    - runner: ubuntu-22.04
                      target: aarch64
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: 3.x
            - name: Build wheels
              uses: PyO3/maturin-action@v1
              with:
                  target: ${{ matrix.platform.target }}
                  args: --release --out dist --find-interpreter --strip
                  sccache: ${{ !startsWith(github.ref, 'refs/tags/') }}
                  manylinux: musllinux_1_2
            - name: Upload wheels
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-musllinux-${{ matrix.platform.target }}
                  path: dist

    # The original `sdist` job
    sdist:
        runs-on: ubuntu-latest
        steps:
            - uses: actions/checkout@v4
            - name: Build sdist
              uses: PyO3/maturin-action@v1
              with:
                  command: sdist
                  args: --out dist
            - name: Upload sdist
              uses: actions/upload-artifact@v4
              with:
                  name: wheels-sdist
                  path: dist

    # The new `test` job to download and test the built wheels
    test:
        # This job will run on a matrix of OS and Python versions
        runs-on: ${{ matrix.os }}
        # It must wait for the `linux` and `musllinux` jobs to complete successfully
        needs: [linux, musllinux]
        strategy:
            matrix:
                # Define the exact supported combinations
                include:
                    # Ubuntu 24.04 with Python 3.12 (AMD64)
                    - os: ubuntu-24.04
                      python: "3.12"
                    # Ubuntu 24.04 with Python 3.12 (ARM64)
                    - os: ubuntu-24.04-arm64
                      python: "3.12"
                    # Ubuntu 22.04 with Python 3.11 (AMD64)
                    - os: ubuntu-22.04
                      python: "3.11"
                    # Ubuntu 22.04 with Python 3.11 (ARM64)
                    - os: ubuntu-22.04-arm64
                      python: "3.11"
                    # Ubuntu 22.04 with Python 3.10 (AMD64)
                    - os: ubuntu-22.04
                      python: "3.10"
                    # Ubuntu 22.04 with Python 3.10 (ARM64)
                    - os: ubuntu-22.04-arm64
                      python: "3.10"
                    # Ubuntu 20.04 with Python 3.9 (AMD64)
                    - os: ubuntu-20.04
                      python: "3.9"
                    # Ubuntu 20.04 with Python 3.8 (AMD64)
                    - os: ubuntu-20.04
                      python: "3.8"
                    # Ubuntu 18.04 with Python 3.7 (AMD64)
                    - os: ubuntu-18.04
                      python: "3.7"
                    # Ubuntu 18.04 with Python 3.6 (AMD64)
                    - os: ubuntu-18.04
                      python: "3.6"
        steps:
            - uses: actions/checkout@v4
            - uses: actions/setup-python@v5
              with:
                  python-version: ${{ matrix.python }}

            # Download all artifacts from the `linux` and `musllinux` jobs.
            # The `path` input specifies the directory where artifacts will be downloaded.
            # This will create directories like `wheels-linux-x86_64`, `wheels-linux-aarch64`, etc.
            - name: Download all wheels
              uses: actions/download-artifact@v4
              with:
                  path: artifacts

            - name: Install wheel
              run: |
                  pip install \
                    --find-links artifacts/wheels-linux-x86_64 \
                    --find-links artifacts/wheels-linux-aarch64 \
                    --find-links artifacts/wheels-musllinux-x86_64 \
                    --find-links artifacts/wheels-musllinux-aarch64 \
                        --force-reinstall rknn-convert

            # Now, run your test command.
            # This step assumes the `rknn-convert` command is now available on the PATH
            # after the wheel was installed.
            - name: Test `rknn-convert convert config.toml` command
              run: |
                  echo "Testing command on ${{ matrix.os }} with Python ${{ matrix.python }}"
                  rknn-convert convert config.toml
                  echo "Test complete!"

    # The original `release` job.
    release:
        name: Release
        runs-on: ubuntu-latest
        if: ${{ startsWith(github.ref, 'refs/tags/') || github.event_name == 'workflow_dispatch' }}
        needs: [linux, musllinux, sdist]
        permissions:
            # Use to sign the release artifacts
            id-token: write
            # Used to upload release artifacts
            contents: write
            # Used to generate artifact attestation
            attestations: write
        steps:
            - uses: actions/download-artifact@v4
            - name: Generate artifact attestation
              uses: actions/attest-build-provenance@v2
              with:
                  subject-path: "wheels-*/*"
            - name: Publish to PyPI
              if: ${{ startsWith(github.ref, 'refs/tags/') }}
              uses: PyO3/maturin-action@v1
              env:
                  MATURIN_PYPI_TOKEN: ${{ secrets.PYPI_API_TOKEN }}
              with:
                  command: upload
                  args: --non-interactive --skip-existing wheels-*/*
